((dp0
VCarboncoin
p1
(dp2
Vinfo
p3
(dp4
Vlanguage
p5
VSolidity
p6
sVdeveloperDoc
p7
(dp8
Vmethods
p9
(dp10
ssVlanguageVersion
p11
V0.2.1
p12
sVabiDefinition
p13
(lp14
(dp15
Vinputs
p16
(lp17
(dp18
Vtype
p19
Vaddress
p20
sVname
p21
Vtarget
p22
sa(dp23
Vtype
p24
Vuint256
p25
sVname
p26
VgoalTimestamp
p27
sa(dp28
Vtype
p29
Vuint256
p30
sVname
p31
VgoalUsage
p32
sasVtype
p33
Vfunction
p34
sVconstant
p35
I00
sVname
p36
VsetGoal
p37
sVoutputs
p38
(lp39
sa(dp40
Vinputs
p41
(lp42
(dp43
Vtype
p44
Vaddress
p45
sVname
p46
Vtarget
p47
sa(dp48
Vtype
p49
Vuint256
p50
sVname
p51
VcurrentTimestamp
p52
sasVtype
p53
Vfunction
p54
sVconstant
p55
I00
sVname
p56
VcheckGoal
p57
sVoutputs
p58
(lp59
(dp60
Vtype
p61
Vbool
p62
sVname
p63
V
p64
sasa(dp65
Vinputs
p66
(lp67
(dp68
Vtype
p69
Vaddress
p70
sVname
p71
Vtarget
p72
sa(dp73
Vtype
p74
Vuint256
p75
sVname
p76
Vusage
p77
sasVtype
p78
Vfunction
p79
sVconstant
p80
I00
sVname
p81
VrecordUsage
p82
sVoutputs
p83
(lp84
sa(dp85
Vinputs
p86
(lp87
(dp88
Vtype
p89
Vaddress
p90
sVname
p91
Vtarget
p92
sa(dp93
Vtype
p94
Vuint256
p95
sVname
p96
Vamount
p97
sasVtype
p98
Vfunction
p99
sVconstant
p100
I00
sVname
p101
Vdebit
p102
sVoutputs
p103
(lp104
sa(dp105
Vinputs
p106
(lp107
(dp108
Vtype
p109
Vaddress
p110
sVname
p111
Vcoinbase
p112
sasVtype
p113
Vfunction
p114
sVconstant
p115
I00
sVname
p116
VgetGoal
p117
sVoutputs
p118
(lp119
(dp120
Vtype
p121
Vuint256
p122
sVname
p123
g64
sasa(dp124
Vinputs
p125
(lp126
sVtype
p127
Vfunction
p128
sVconstant
p129
I01
sVname
p130
Vbalance
p131
sVoutputs
p132
(lp133
(dp134
Vtype
p135
Vuint256
p136
sVname
p137
g64
sasa(dp138
Vinputs
p139
(lp140
(dp141
Vtype
p142
Vaddress
p143
sVname
p144
Vwallet
p145
sasVtype
p146
Vfunction
p147
sVconstant
p148
I01
sVname
p149
Vbalance
p150
sVoutputs
p151
(lp152
(dp153
Vtype
p154
Vuint256
p155
sVname
p156
g64
sasa(dp157
Vinputs
p158
(lp159
sVtype
p160
Vfunction
p161
sVconstant
p162
I01
sVname
p163
Vmaster
p164
sVoutputs
p165
(lp166
(dp167
Vtype
p168
Vaddress
p169
sVname
p170
g64
sasa(dp171
Vinputs
p172
(lp173
(dp174
Vtype
p175
Vaddress
p176
sVname
p177
Vtarget
p178
sa(dp179
Vtype
p180
Vuint256
p181
sVname
p182
Vamount
p183
sasVtype
p184
Vfunction
p185
sVconstant
p186
I00
sVname
p187
Vcredit
p188
sVoutputs
p189
(lp190
sa(dp191
Vinputs
p192
(lp193
sVtype
p194
Vconstructor
p195
sa(dp196
Vinputs
p197
(lp198
(dp199
Vindexed
p200
I00
sVtype
p201
Vaddress
p202
sVname
p203
Vtarget
p204
sa(dp205
Vindexed
p206
I00
sVtype
p207
Vuint256
p208
sVname
p209
Vamount
p210
sasVtype
p211
Vevent
p212
sVname
p213
VearnCoin
p214
sVanonymous
p215
I00
sa(dp216
Vinputs
p217
(lp218
(dp219
Vindexed
p220
I00
sVtype
p221
Vaddress
p222
sVname
p223
Vtarget
p224
sa(dp225
Vindexed
p226
I00
sVtype
p227
Vuint256
p228
sVname
p229
Vamount
p230
sasVtype
p231
Vevent
p232
sVname
p233
VspendCoin
p234
sVanonymous
p235
I00
sasVsource
p236
Vcontract Carboncoin {struct Goal {uint goalTimestamp;uint goalUsage;uint currentCumulativeUsage;uint previousCumulativeUsage;}/* TODO: carboncoin conversion rate? */mapping (address => Goal) internal goals; /* to maintain goals/usage */mapping (address => uint) internal ledger; /* to maintain carbon coin balance */address public master;event earnCoin(address target, uint amount);event spendCoin(address target, uint amount);function Carboncoin() {master = msg.sender;}function balance() public constant returns (uint) {return ledger[msg.sender];}function balance(address wallet) public constant returns (uint) {return ledger[wallet];}function credit(address target, uint amount) public {ledger[target] += amount;earnCoin(target, amount);}function debit(address target, uint amount) public {ledger[target] -= amount;spendCoin(target, amount);}/* TODO: limit access to below method to owner */function setGoal(address target, uint goalTimestamp, uint goalUsage) {goals[target].goalTimestamp = goalTimestamp;goals[target].goalUsage = goalUsage;}function getGoal(address coinbase) returns (uint) {return goals[coinbase].goalUsage;}function recordUsage(address target, uint usage) {goals[target].currentCumulativeUsage += usage;}function checkGoal(address target, uint currentTimestamp) returns (bool) {uint goalTimestamp = goals[target].goalTimestamp;uint goalUsage = goals[target].goalUsage;uint totalUsage = goals[target].currentCumulativeUsage - goals[target].previousCumulativeUsage;/*if (currentTimestamp >= goalTimestamp) { */if (totalUsage < goalUsage) {credit(target, totalUsage - goalUsage);return true;} /*else {debit(target, goalUsage - totalUsage);return false;}*//* TODO: add logic to reset goals */goals[target].previousCumulativeUsage = goals[target].currentCumulativeUsage;}}
p237
sVcompilerVersion
p238
V0.2.1
p239
sVcompilerOptions
p240
V--bin --abi --userdoc --devdoc --add-std --optimize -o /tmp/solc633531910
p241
sVuserDoc
p242
(dp243
Vmethods
p244
(dp245
sssVcode
p246
V0x606060405260028054600160a060020a031916331790556102c8806100246000396000f3606060405236156100775760e060020a6000350463187625df8114610079578063502f4553146100a75780635be38fc0146100f4578063636be27a1461011e5780639db48bbb14610184578063b69ef8a8146101ac578063e3d670d7146101d8578063ee97f7f3146101fc578063ef6506db1461020e575b005b600160a060020a03600435166000908152602081905260409020602435815560443560019190910155610077565b6101c6600435602435600160a060020a038216600090815260208190526040812080546001820154600283015460039093015491929091900381811015610291576102bf86838303610218565b600160a060020a036004351660009081526020819052604090206002018054602435019055610077565b610077600435602435600160a060020a038216600081815260016020908152604091829020805485900390558151928352820183905280517fd9d0c4ce05bd611ae3e110c5cb3b2d0dc0b995d6c23a6a6085bc65472a26f9449281900390910190a15050565b6101c6600435600160a060020a0381166000908152602081905260409020600101545b919050565b33600160a060020a03166000908152600160205260409020545b60408051918252519081900360200190f35b6101c6600435600160a060020a0381166000908152600160205260409020546101a7565b610274600254600160a060020a031681565b6100776004356024355b600160a060020a0382166000818152600160209081526040918290208054850190558151928352820183905280517ff84b6f966841690a37326c1cd14baa66ea96c96a1d4aeb62faee80c73a67421b9281900390910190a15050565b60408051600160a060020a03929092168252519081900360200190f35b600160a060020a03861660009081526020819052604090206002810154600391909101555b50505092915050565b600193506102b656
p247
ssV0x26d41a784b9add0cd4393e14be5b6137ff332467
p248
tp249
.